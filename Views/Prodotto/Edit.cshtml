@model InForno.Models.Prodotto

@{
    ViewBag.Title = "Modifica Prodotto";
}

<div class="container">
    <div class="row justify-content-center mt-5">
        <div class="col-md-8">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h2 class="card-title mb-0">Modifica Prodotto</h2>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-group row">
                            @Html.LabelFor(model => model.Foto, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Foto, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Foto, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.Descrizione, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Descrizione, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Descrizione, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.Prezzo, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Prezzo, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Prezzo, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.TempoDiConsegna, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.TempoDiConsegna, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.TempoDiConsegna, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            <div class="col-md-10">
                                <button type="submit" class="btn btn-primary">Salva Modifiche</button>
                                @Html.ActionLink("Torna Indietro", "Index", null, new { @class = "btn btn-secondary ml-2" })
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
